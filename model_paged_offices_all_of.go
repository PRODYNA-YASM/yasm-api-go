/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.4.13
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PagedOfficesAllOf struct for PagedOfficesAllOf
type PagedOfficesAllOf struct {
	Offices []Office `json:"offices,omitempty"`
}

// NewPagedOfficesAllOf instantiates a new PagedOfficesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagedOfficesAllOf() *PagedOfficesAllOf {
	this := PagedOfficesAllOf{}
	return &this
}

// NewPagedOfficesAllOfWithDefaults instantiates a new PagedOfficesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagedOfficesAllOfWithDefaults() *PagedOfficesAllOf {
	this := PagedOfficesAllOf{}
	return &this
}

// GetOffices returns the Offices field value if set, zero value otherwise.
func (o *PagedOfficesAllOf) GetOffices() []Office {
	if o == nil || o.Offices == nil {
		var ret []Office
		return ret
	}
	return o.Offices
}

// GetOfficesOk returns a tuple with the Offices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagedOfficesAllOf) GetOfficesOk() ([]Office, bool) {
	if o == nil || o.Offices == nil {
		return nil, false
	}
	return o.Offices, true
}

// HasOffices returns a boolean if a field has been set.
func (o *PagedOfficesAllOf) HasOffices() bool {
	if o != nil && o.Offices != nil {
		return true
	}

	return false
}

// SetOffices gets a reference to the given []Office and assigns it to the Offices field.
func (o *PagedOfficesAllOf) SetOffices(v []Office) {
	o.Offices = v
}

func (o PagedOfficesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Offices != nil {
		toSerialize["offices"] = o.Offices
	}
	return json.Marshal(toSerialize)
}

type NullablePagedOfficesAllOf struct {
	value *PagedOfficesAllOf
	isSet bool
}

func (v NullablePagedOfficesAllOf) Get() *PagedOfficesAllOf {
	return v.value
}

func (v *NullablePagedOfficesAllOf) Set(val *PagedOfficesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePagedOfficesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePagedOfficesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagedOfficesAllOf(val *PagedOfficesAllOf) *NullablePagedOfficesAllOf {
	return &NullablePagedOfficesAllOf{value: val, isSet: true}
}

func (v NullablePagedOfficesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagedOfficesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


