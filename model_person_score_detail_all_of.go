/*
 * YASM (Yet Another Skill Management) API
 *
 * This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.
 *
 * API version: 0.7.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PersonScoreDetailAllOf struct for PersonScoreDetailAllOf
type PersonScoreDetailAllOf struct {
	Score *float32 `json:"score,omitempty"`
}

// NewPersonScoreDetailAllOf instantiates a new PersonScoreDetailAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonScoreDetailAllOf() *PersonScoreDetailAllOf {
	this := PersonScoreDetailAllOf{}
	return &this
}

// NewPersonScoreDetailAllOfWithDefaults instantiates a new PersonScoreDetailAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonScoreDetailAllOfWithDefaults() *PersonScoreDetailAllOf {
	this := PersonScoreDetailAllOf{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *PersonScoreDetailAllOf) GetScore() float32 {
	if o == nil || o.Score == nil {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonScoreDetailAllOf) GetScoreOk() (*float32, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *PersonScoreDetailAllOf) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *PersonScoreDetailAllOf) SetScore(v float32) {
	o.Score = &v
}

func (o PersonScoreDetailAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	return json.Marshal(toSerialize)
}

type NullablePersonScoreDetailAllOf struct {
	value *PersonScoreDetailAllOf
	isSet bool
}

func (v NullablePersonScoreDetailAllOf) Get() *PersonScoreDetailAllOf {
	return v.value
}

func (v *NullablePersonScoreDetailAllOf) Set(val *PersonScoreDetailAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonScoreDetailAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonScoreDetailAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonScoreDetailAllOf(val *PersonScoreDetailAllOf) *NullablePersonScoreDetailAllOf {
	return &NullablePersonScoreDetailAllOf{value: val, isSet: true}
}

func (v NullablePersonScoreDetailAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonScoreDetailAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


