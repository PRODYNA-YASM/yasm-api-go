/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SkillEvaluationFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SkillEvaluationFilter{}

// SkillEvaluationFilter struct for SkillEvaluationFilter
type SkillEvaluationFilter struct {
	StartDate string `json:"startDate"`
	EndDate string `json:"endDate"`
	EmployeeIds []string `json:"employeeIds,omitempty"`
	ErpIds []string `json:"erpIds,omitempty"`
}

// NewSkillEvaluationFilter instantiates a new SkillEvaluationFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkillEvaluationFilter(startDate string, endDate string) *SkillEvaluationFilter {
	this := SkillEvaluationFilter{}
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewSkillEvaluationFilterWithDefaults instantiates a new SkillEvaluationFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkillEvaluationFilterWithDefaults() *SkillEvaluationFilter {
	this := SkillEvaluationFilter{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *SkillEvaluationFilter) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *SkillEvaluationFilter) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *SkillEvaluationFilter) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *SkillEvaluationFilter) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *SkillEvaluationFilter) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *SkillEvaluationFilter) SetEndDate(v string) {
	o.EndDate = v
}

// GetEmployeeIds returns the EmployeeIds field value if set, zero value otherwise.
func (o *SkillEvaluationFilter) GetEmployeeIds() []string {
	if o == nil || IsNil(o.EmployeeIds) {
		var ret []string
		return ret
	}
	return o.EmployeeIds
}

// GetEmployeeIdsOk returns a tuple with the EmployeeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkillEvaluationFilter) GetEmployeeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.EmployeeIds) {
		return nil, false
	}
	return o.EmployeeIds, true
}

// HasEmployeeIds returns a boolean if a field has been set.
func (o *SkillEvaluationFilter) HasEmployeeIds() bool {
	if o != nil && !IsNil(o.EmployeeIds) {
		return true
	}

	return false
}

// SetEmployeeIds gets a reference to the given []string and assigns it to the EmployeeIds field.
func (o *SkillEvaluationFilter) SetEmployeeIds(v []string) {
	o.EmployeeIds = v
}

// GetErpIds returns the ErpIds field value if set, zero value otherwise.
func (o *SkillEvaluationFilter) GetErpIds() []string {
	if o == nil || IsNil(o.ErpIds) {
		var ret []string
		return ret
	}
	return o.ErpIds
}

// GetErpIdsOk returns a tuple with the ErpIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkillEvaluationFilter) GetErpIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ErpIds) {
		return nil, false
	}
	return o.ErpIds, true
}

// HasErpIds returns a boolean if a field has been set.
func (o *SkillEvaluationFilter) HasErpIds() bool {
	if o != nil && !IsNil(o.ErpIds) {
		return true
	}

	return false
}

// SetErpIds gets a reference to the given []string and assigns it to the ErpIds field.
func (o *SkillEvaluationFilter) SetErpIds(v []string) {
	o.ErpIds = v
}

func (o SkillEvaluationFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SkillEvaluationFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	if !IsNil(o.EmployeeIds) {
		toSerialize["employeeIds"] = o.EmployeeIds
	}
	if !IsNil(o.ErpIds) {
		toSerialize["erpIds"] = o.ErpIds
	}
	return toSerialize, nil
}

type NullableSkillEvaluationFilter struct {
	value *SkillEvaluationFilter
	isSet bool
}

func (v NullableSkillEvaluationFilter) Get() *SkillEvaluationFilter {
	return v.value
}

func (v *NullableSkillEvaluationFilter) Set(val *SkillEvaluationFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableSkillEvaluationFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableSkillEvaluationFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkillEvaluationFilter(val *SkillEvaluationFilter) *NullableSkillEvaluationFilter {
	return &NullableSkillEvaluationFilter{value: val, isSet: true}
}

func (v NullableSkillEvaluationFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkillEvaluationFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


