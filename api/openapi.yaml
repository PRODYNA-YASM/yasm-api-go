openapi: 3.0.0
info:
  description: This is an example of using OAuth2 Implicit Flow in a specification
    to describe security to your API.
  title: YASM (Yet Another Skill Management) API
  version: 1.2.7
servers:
- url: /api/v1
security:
- bearerAuth:
  - user
  - admin
paths:
  /ping:
    get:
      description: "This operation shows how to override the global security defined\
        \ above, as we want to open it up for all users."
      operationId: getPing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      security: []
      summary: Server heartbeat operation
      tags:
      - Status
  /version:
    get:
      description: "This operation shows how to override the global security defined\
        \ above, as we want to open it up for all users."
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Information about the server
      tags:
      - Status
  /organizations:
    get:
      operationId: getOrganizations
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedOrganizations'
          description: A paged array of Organizations
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of all Organizations
      tags:
      - Organization
    post:
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: Details about the Organization
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      security:
      - implicit: []
      summary: Create an Organization
      tags:
      - Organization
  /organizations/{organizationId}:
    delete:
      operationId: deleteOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      security:
      - implicit: []
      summary: Delete an organization
      tags:
      - Organization
    get:
      operationId: getOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about an Organization
      tags:
      - Organization
    put:
      operationId: updateOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: Details about the organization
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      security:
      - implicit: []
      summary: Update an Organization
      tags:
      - Organization
  /organizations/{organizationId}/merge/{otherOrganizationId}:
    put:
      operationId: mergeOrganizations
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: otherOrganizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Merge two organizations
      tags:
      - Organization
  /organizations/{organizationId}/industries/{industryId}:
    delete:
      operationId: detachOrganizationFromIndustry
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: industryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Organization to an Industry
      tags:
      - Organization
      - Industry
    post:
      operationId: attachOrganizationToIndustry
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: industryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add an Organization to an Industry
      tags:
      - Organization
      - Industry
  /organizations/{organizationId}/offices:
    post:
      operationId: createOffice
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create an Office in an Organization
      tags:
      - Organization
      - Office
  /organizations/{organizationId}/offices/{officeId}:
    delete:
      operationId: deleteOffice
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: officeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delte an Office from an Organization
      tags:
      - Organization
      - Office
    get:
      operationId: getOffice
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: officeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get an Office for an Organiaztion
      tags:
      - Organization
      - Office
    put:
      operationId: updateOffice
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: officeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update an Office for an Organization
      tags:
      - Organization
      - Office
  /industries:
    get:
      operationId: getIndustries
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedIndustries'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all Industries
      tags:
      - Industry
    post:
      operationId: createIndustry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Industry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndustryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create an Industry
      tags:
      - Industry
  /industries/{industryId}:
    delete:
      operationId: deleteIndustry
      parameters:
      - explode: false
        in: path
        name: industryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete an Industry
      tags:
      - Industry
    get:
      operationId: getIndustry
      parameters:
      - explode: false
        in: path
        name: industryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndustryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about an Industry
      tags:
      - Industry
    put:
      operationId: updateIndustry
      parameters:
      - explode: false
        in: path
        name: industryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Industry'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndustryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update an Industry
      tags:
      - Industry
  /organizations/{organizationId}/certifications:
    get:
      operationId: getCertificationsForOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedCertifications'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of all certifications for a organization
      tags:
      - Organization
      - Certification
    post:
      operationId: createCertification
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a Certification in an Organization
      tags:
      - Organization
      - Certification
  /organizations/{organizationId}/certificates/{certificateId}:
    put:
      operationId: moveCertification
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: certificateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Move a Certification to an Organization
      tags:
      - Organization
      - Certification
  /organizations/{organizationId}/projects:
    get:
      operationId: getOrganizationProjects
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedProjects'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of all Projects for an Organization
      tags:
      - Organization
      - Project
    post:
      operationId: createProject
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a Project in an Organization
      tags:
      - Organization
      - Project
  /certifications:
    get:
      operationId: getCertifications
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedCertifications'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of all Certifations indepdenant of the Organization
      tags:
      - Certification
  /certifications/{certificationId}:
    delete:
      operationId: deleteCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a Certification
      tags:
      - Certification
    get:
      operationId: getCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about a Certification
      tags:
      - Certification
    put:
      operationId: updateCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Certification
      tags:
      - Certification
  /certifications/{certificationId}/skills/{skillId}:
    delete:
      operationId: deleteSkillFromCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      tags:
      - Certification
      - Skill
    post:
      description: Add Skill to Certification
      operationId: addSkillToCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      tags:
      - Certification
      - Skill
    put:
      description: Update Skill in Certification
      operationId: updateSkillInCertification
      parameters:
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      tags:
      - Certification
      - Skill
  /projects/search:
    post:
      operationId: searchProjects
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedProjects'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Complex search over project entities
      tags:
      - Project
  /projects/{projectId}:
    delete:
      operationId: deleteProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a project
      tags:
      - Project
    get:
      operationId: getProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about a Project
      tags:
      - Project
    put:
      operationId: updateProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Project
      tags:
      - Project
  /projects/{projectId}/merge/{otherProjectId}:
    put:
      operationId: mergeProjects
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: otherProjectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Merge to projects
      tags:
      - Project
  /skills:
    get:
      operationId: getSkills
      parameters:
      - description: "Gives you either all skills, only the root kills or those which\
          \ are defining kinds"
        explode: true
        in: query
        name: types
        required: false
        schema:
          default: all
          enum:
          - all
          - root
          - kind
          type: string
        style: form
      - description: Optionally filter skills based on suggestion
        explode: true
        in: query
        name: suggestions
        required: false
        schema:
          default: all
          enum:
          - all
          - suggested
          - notsuggested
          type: string
        style: form
      - description: Optionally filter skills based on linkable
        explode: true
        in: query
        name: linkable
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSkills'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: "Get a list of all skills, optionally only root, optionally only kinds"
      tags:
      - Skill
    post:
      operationId: createSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a Skill
      tags:
      - Skill
  /skills/{skillId}:
    delete:
      operationId: deleteSkill
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a Skill
      tags:
      - Skill
    get:
      operationId: getSkill
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details for a single skill
      tags:
      - Skill
    put:
      operationId: updateSkill
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Skill
      tags:
      - Skill
  /skills/{skillId}/merge/{otherSkillId}:
    put:
      operationId: mergeSkills
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: otherSkillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Merge two skills
      tags:
      - Skill
  /skills/{skillId}/parents:
    get:
      operationId: getSkillParents
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSkills'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get ghe list of parents for a skill
      tags:
      - Skill
  /skills/{skillId}/parents/{parentSkillId}:
    delete:
      operationId: removeSkillFromParentSkill
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parentSkillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: "Detaches a Skill from parent Skill, return the parent Skill"
      tags:
      - Skill
    post:
      operationId: addSkillToParentSkill
      parameters:
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parentSkillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: "Attach a Skill to a parent Skill, returns the parent Skill"
      tags:
      - Skill
  /persons:
    post:
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a new Person
      tags:
      - Person
  /persons/{personId}:
    delete:
      operationId: deletePerson
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete an existing Person
      tags:
      - Person
    get:
      operationId: getPerson
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get basic info about a person
      tags:
      - Person
    put:
      operationId: updatePerson
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update an existing Person
      tags:
      - Person
  /persons/search:
    post:
      operationId: searchPersons
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPersons'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Complex search over person entities
      tags:
      - Person
  /persons/{personid}/profile:
    get:
      operationId: generatePersonProfile
      parameters:
      - explode: false
        in: path
        name: personid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A PDF profile of a Person
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Generate a PDF profile from a Person
      tags:
      - Person
  /persons/{personId}/interests/skills/{skillId}:
    delete:
      operationId: deletePersonInterest
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Interest to a Person
      tags:
      - Person
      - Skill
    post:
      operationId: addPersonInterest
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add an Interest to a Person
      tags:
      - Person
      - Skill
  /persons/{personId}/experiences:
    delete:
      operationId: deletePersonSkillExperiences
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: uuid
                type: string
              type: array
        description: A list of skillIds
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Skill Experience to a Person
      tags:
      - Person
      - Skill
    post:
      operationId: addPersonSkillExperiences
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SkillLevelUpdate'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add an Skill experience to a Person (bulk)
      tags:
      - Person
      - Skill
    put:
      operationId: updatePersonSkillExperiences
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SkillLevelUpdate'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Edit an Skill experience to a Person
      tags:
      - Person
      - Skill
  /persons/{personId}/languages/{languageId}:
    delete:
      operationId: removePersonLanguage
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove a language from a person
      tags:
      - Person
      - Language
    post:
      operationId: addPersonLanguage
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Assign a language to the person
      tags:
      - Person
      - Language
    put:
      operationId: uupdatePersonLanguage
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a language of a person
      tags:
      - Person
      - Language
  /persons/{personId}/experiences/skills/{skillId}:
    delete:
      operationId: deletePersonSkillExperience
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Skill Experience to a Person
      tags:
      - Person
      - Skill
    post:
      operationId: addPersonSkillExperience
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add an Skill experience to a Person
      tags:
      - Person
      - Skill
    put:
      operationId: updatePersonSkillExperience
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Edit an Skill experience to a Person
      tags:
      - Person
      - Skill
  /persons/{personId}/certifications/{certificationId}:
    delete:
      operationId: deletePersonCertification
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Interest to a Person
      tags:
      - Person
      - Certification
    post:
      operationId: addPersonCertification
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add Certification to a Person
      tags:
      - Person
      - Certification
    put:
      operationId: updatePersonCertification
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: certificationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Certification of a Person
      tags:
      - Person
      - Certification
  /persons/{personId}/offices/{officeId}:
    delete:
      operationId: deletePersonOffice
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: officeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete the office from a Person
      tags:
      - Person
      - Office
    post:
      operationId: addPersonOffice
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: officeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Assing a person to an office
      tags:
      - Person
      - Office
  /persons/{personId}/projects/{projectId}:
    delete:
      operationId: deletePersonProject
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove an Project from a Person
      tags:
      - Person
      - Project
    get:
      operationId: readPersonProject
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectParticipation'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a Project Partifipation of a Person
      tags:
      - Person
      - Project
    post:
      operationId: addPersonProject
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectParticipationUpdate'
        description: List of Skills with level and timeframe
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add Project to a Person
      tags:
      - Person
      - Project
    put:
      operationId: updatePersonProject
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectParticipationUpdate'
        description: A time frame and a list of Skills
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Project of a Person
      tags:
      - Person
      - Project
  /persons/{personId}/projects/{projectId}/skills/{skillId}:
    delete:
      operationId: deletePersonProjectSkill
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove a Skill from a Project participation
      tags:
      - Person
      - Project
      - Skill
    post:
      operationId: addPersonProjectSkill
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        description: The Skill Level
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Add Skill to a Project participation
      tags:
      - Person
      - Project
      - Skill
    put:
      operationId: updatePersonProjectSkill
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        description: The Skill Level
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update the level of a Skill in a Project participation
      tags:
      - Person
      - Project
      - Skill
  /persons/{personId}/projects/{projectId}/skills/{skillId}/confirmation/{confirmingPersonId}:
    delete:
      operationId: deleteConfirmation
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: confirmingPersonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Remove a confirmation
      tags:
      - Person
      - Project
      - Skill
    post:
      operationId: confirmSkill
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: skillId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: confirmingPersonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Confirm Skill
      tags:
      - Person
      - Project
      - Skill
  /persons/{personId}/availabilities:
    get:
      operationId: getAvailabilities
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedAvailabilities'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of all activities for a person
      tags:
      - Person
      - Availability
    post:
      operationId: createAvailability
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
        description: The availability
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a availability for a person
      tags:
      - Person
      - Availability
  /persons/{personId}/availabilities/calculated: {}
  /persons/{personId}/availabilities/{availabilityId}:
    delete:
      operationId: deleteAvailability
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: availabilityId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a person availability
      tags:
      - Person
      - Availability
    put:
      operationId: updateAvailability
      parameters:
      - explode: false
        in: path
        name: personId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: availabilityId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
        description: The availability
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDetail'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a person availability
      tags:
      - Person
      - Availability
  /search/all/{text}:
    get:
      operationId: searchAll
      parameters:
      - explode: false
        in: path
        name: text
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Fulltext search on all kinds of objects
      tags:
      - Search
  /languages:
    get:
      operationId: getLanguages
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLanguages'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a list of Languages
      tags:
      - Language
    post:
      operationId: createLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a new language
      tags:
      - Language
  /languages/{languageId}:
    delete:
      operationId: deleteLanguage
      parameters:
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete a language
      tags:
      - Language
    get:
      operationId: getLanguage
      parameters:
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about a language
      tags:
      - Language
  /countries:
    get:
      operationId: getCountries
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedCountries'
          description: OK
      summary: Get all Countries
      tags:
      - Country
    post:
      operationId: createCountry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a new Country
      tags:
      - Country
  /countries/{countryId}:
    delete:
      operationId: deleteCountry
      parameters:
      - explode: false
        in: path
        name: countryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a Country
      tags:
      - Country
    get:
      operationId: getCountry
      parameters:
      - explode: false
        in: path
        name: countryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get details about a Country
      tags:
      - Country
    put:
      operationId: updateCountry
      parameters:
      - explode: false
        in: path
        name: countryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Update a Country
      tags:
      - Country
  /countries/{countryId}/languages/{languageId}:
    delete:
      operationId: removeLanguageFromCountry
      parameters:
      - explode: false
        in: path
        name: countryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Assign a language to a country
      tags:
      - Language
      - Country
    post:
      operationId: addLanguageToCountry
      parameters:
      - explode: false
        in: path
        name: countryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: languageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryDetails'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Assign a language to a country
      tags:
      - Language
      - Country
components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
  schemas:
    Version:
      example:
        serverVersion: 0.0.0
        apiVersion: 0.0.0
      properties:
        apiVersion:
          example: 0.0.0
          type: string
        serverVersion:
          example: 0.0.0
          type: string
      required:
      - apiVersion
      - serverVersion
      type: object
    DateModel:
      format: date
      type: string
    BasicDomainModel:
      discriminator:
        propertyName: type
      properties:
        id:
          format: uuid
          type: string
      required:
      - id
      type: object
    NamedDomainModel:
      allOf:
      - $ref: '#/components/schemas/BasicDomainModel'
      discriminator:
        propertyName: type
      example:
        name: This is the name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          example: This is the name
          type: string
      required:
      - name
      type: object
    Descriptable:
      properties:
        description:
          example: This is a description
          type: string
      required:
      - name
      type: object
    Locateable:
      properties:
        location:
          example: "Frankfurt, Germany"
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
      type: object
    Suggestable:
      properties:
        suggestion:
          default: false
          type: boolean
      required:
      - suggestion
      type: object
    Linkable:
      properties:
        linkable:
          default: false
          description: The entity can be linked
          type: boolean
      required:
      - hidden
      type: object
    Timeframed:
      example:
        enddate: 2000-01-23
        startdate: 2000-01-23
      properties:
        startdate:
          format: date
          type: string
        enddate:
          format: date
          type: string
      type: object
    Synonymable:
      properties:
        synonyms:
          items:
            type: string
          type: array
      type: object
    Availability:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Timeframed'
      example:
        workHours: 38.5
        descriptions:
        - descriptions
        - descriptions
        plannedHours: 22.5
      properties:
        workHours:
          example: 38.5
          format: float
          type: number
        plannedHours:
          example: 22.5
          format: float
          type: number
        descriptions:
          items:
            type: string
          type: array
      required:
      - enddate
      - id
      - name
      - plannedHours
      - startdate
      - workHours
      type: object
    AvailabilityDetail:
      example:
        availability:
          workHours: 38.5
          descriptions:
          - descriptions
          - descriptions
          plannedHours: 22.5
        percent: 8.008281904610115
      properties:
        availability:
          $ref: '#/components/schemas/Availability'
        percent:
          format: integer
          maximum: 100
          minimum: 0
          type: number
      type: object
    Certification:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Descriptable'
      example:
        validity: validity
      properties:
        validity:
          type: string
      type: object
    CertificationDetails:
      example:
        skills:
        - level:
            level: 1
          skill:
            invest: false
            kindgiver: false
        - level:
            level: 1
          skill:
            invest: false
            kindgiver: false
        organization:
          partner: false
          picture: picture
          customer: false
        certification:
          validity: validity
      properties:
        certification:
          $ref: '#/components/schemas/Certification'
        organization:
          $ref: '#/components/schemas/Organization'
        skills:
          items:
            $ref: '#/components/schemas/SkillLevel'
          type: array
      type: object
    Country:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      example:
        picture: picture
      properties:
        picture:
          description: base64 encoded image
          type: string
      type: object
    CountryDetails:
      example:
        country:
          picture: picture
        languages:
        - null
        - null
      properties:
        country:
          $ref: '#/components/schemas/Country'
        languages:
          items:
            $ref: '#/components/schemas/Language'
          type: array
      type: object
    Experience:
      example:
        skill:
          level:
            level: 1
          skill:
            invest: false
            kindgiver: false
        confirmedBy:
        - education: Bachelor of Computer Scince
          mail: peter.mueller@prodyna.com
          jobTitle: Software Engineer
          employeeId: "1234567"
          onsiteRatio: 20
          seniorityEnum: null
          picture: picture
          inactive: false
          mobilePhone: +49 176 12345678
          experienceSinceYear: 2010
          company: PRODYNA SE
          department: Professional Services
          seniority: Senior
        - education: Bachelor of Computer Scince
          mail: peter.mueller@prodyna.com
          jobTitle: Software Engineer
          employeeId: "1234567"
          onsiteRatio: 20
          seniorityEnum: null
          picture: picture
          inactive: false
          mobilePhone: +49 176 12345678
          experienceSinceYear: 2010
          company: PRODYNA SE
          department: Professional Services
          seniority: Senior
      properties:
        skill:
          $ref: '#/components/schemas/SkillLevel'
        confirmedBy:
          items:
            $ref: '#/components/schemas/Person'
          type: array
      type: object
    Geolocation:
      properties:
        longitude:
          type: number
        latitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    Industry:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Synonymable'
      type: object
    IndustryDetails:
      example:
        organizations:
        - partner: false
          picture: picture
          customer: false
        - partner: false
          picture: picture
          customer: false
        industry: null
      properties:
        industry:
          $ref: '#/components/schemas/Industry'
        organizations:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    Language:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      type: object
    LanguageDetails:
      example:
        language: null
        countries:
        - picture: picture
        - picture: picture
      properties:
        language:
          $ref: '#/components/schemas/Language'
        countries:
          items:
            $ref: '#/components/schemas/Country'
          type: array
      type: object
    LanguageLevel:
      example:
        level:
          level: 1
        language: null
      properties:
        language:
          $ref: '#/components/schemas/Language'
        level:
          $ref: '#/components/schemas/Level'
      type: object
    Office:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Locateable'
      type: object
    Organization:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Locateable'
      - $ref: '#/components/schemas/Descriptable'
      example:
        partner: false
        picture: picture
        customer: false
      properties:
        partner:
          default: false
          type: boolean
        customer:
          default: false
          type: boolean
        picture:
          description: base64 encoded image
          type: string
      type: object
    OrganizationDetails:
      example:
        projects:
        - external: false
        - external: false
        organization:
          partner: false
          picture: picture
          customer: false
        industries:
        - null
        - null
        offices:
        - null
        - null
        certifications:
        - validity: validity
        - validity: validity
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
        projects:
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          type: array
        industries:
          items:
            $ref: '#/components/schemas/Industry'
          type: array
        certifications:
          items:
            $ref: '#/components/schemas/Certification'
          type: array
        offices:
          items:
            $ref: '#/components/schemas/Office'
          type: array
      type: object
    Person:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Locateable'
      - $ref: '#/components/schemas/Descriptable'
      example:
        education: Bachelor of Computer Scince
        mail: peter.mueller@prodyna.com
        jobTitle: Software Engineer
        employeeId: "1234567"
        onsiteRatio: 20
        seniorityEnum: null
        picture: picture
        inactive: false
        mobilePhone: +49 176 12345678
        experienceSinceYear: 2010
        company: PRODYNA SE
        department: Professional Services
        seniority: Senior
      properties:
        employeeId:
          example: "1234567"
          type: string
        jobTitle:
          example: Software Engineer
          type: string
        company:
          example: PRODYNA SE
          type: string
        department:
          example: Professional Services
          type: string
        education:
          example: Bachelor of Computer Scince
          type: string
        mail:
          example: peter.mueller@prodyna.com
          type: string
        mobilePhone:
          example: +49 176 12345678
          type: string
        seniority:
          example: Senior
          type: string
        seniorityEnum:
          $ref: '#/components/schemas/Seniority'
        experienceSinceYear:
          example: 2010
          type: integer
        onsiteRatio:
          example: 20
          maximum: 100
          minimum: 0
          type: integer
        picture:
          description: base64 encoded image
          type: string
        inactive:
          default: false
          description: Marks persons not working for the company anymore
          type: boolean
      required:
      - id
      - name
      type: object
    PersonDetails:
      example:
        projects:
        - null
        - null
        languages:
        - level:
            level: 1
          language: null
        - level:
            level: 1
          language: null
        person:
          education: Bachelor of Computer Scince
          mail: peter.mueller@prodyna.com
          jobTitle: Software Engineer
          employeeId: "1234567"
          onsiteRatio: 20
          seniorityEnum: null
          picture: picture
          inactive: false
          mobilePhone: +49 176 12345678
          experienceSinceYear: 2010
          company: PRODYNA SE
          department: Professional Services
          seniority: Senior
        availabilities:
        - availability:
            workHours: 38.5
            descriptions:
            - descriptions
            - descriptions
            plannedHours: 22.5
          percent: 8.008281904610115
        - availability:
            workHours: 38.5
            descriptions:
            - descriptions
            - descriptions
            plannedHours: 22.5
          percent: 8.008281904610115
        industries:
        - null
        - null
        skillGroups:
        - skills:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          group:
            invest: false
            kindgiver: false
        - skills:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          group:
            invest: false
            kindgiver: false
        office: null
        interests:
        - invest: false
          kindgiver: false
        - invest: false
          kindgiver: false
        certifications:
        - skills:
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          organization:
            partner: false
            picture: picture
            customer: false
          certification:
            validity: validity
        - skills:
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          organization:
            partner: false
            picture: picture
            customer: false
          certification:
            validity: validity
        experiences:
        - skill:
            level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          confirmedBy:
          - education: Bachelor of Computer Scince
            mail: peter.mueller@prodyna.com
            jobTitle: Software Engineer
            employeeId: "1234567"
            onsiteRatio: 20
            seniorityEnum: null
            picture: picture
            inactive: false
            mobilePhone: +49 176 12345678
            experienceSinceYear: 2010
            company: PRODYNA SE
            department: Professional Services
            seniority: Senior
          - education: Bachelor of Computer Scince
            mail: peter.mueller@prodyna.com
            jobTitle: Software Engineer
            employeeId: "1234567"
            onsiteRatio: 20
            seniorityEnum: null
            picture: picture
            inactive: false
            mobilePhone: +49 176 12345678
            experienceSinceYear: 2010
            company: PRODYNA SE
            department: Professional Services
            seniority: Senior
        - skill:
            level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          confirmedBy:
          - education: Bachelor of Computer Scince
            mail: peter.mueller@prodyna.com
            jobTitle: Software Engineer
            employeeId: "1234567"
            onsiteRatio: 20
            seniorityEnum: null
            picture: picture
            inactive: false
            mobilePhone: +49 176 12345678
            experienceSinceYear: 2010
            company: PRODYNA SE
            department: Professional Services
            seniority: Senior
          - education: Bachelor of Computer Scince
            mail: peter.mueller@prodyna.com
            jobTitle: Software Engineer
            employeeId: "1234567"
            onsiteRatio: 20
            seniorityEnum: null
            picture: picture
            inactive: false
            mobilePhone: +49 176 12345678
            experienceSinceYear: 2010
            company: PRODYNA SE
            department: Professional Services
            seniority: Senior
      properties:
        person:
          $ref: '#/components/schemas/Person'
        projects:
          items:
            $ref: '#/components/schemas/ProjectParticipation'
          type: array
        industries:
          items:
            $ref: '#/components/schemas/Industry'
          type: array
        experiences:
          items:
            $ref: '#/components/schemas/Experience'
          type: array
        interests:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        certifications:
          items:
            $ref: '#/components/schemas/CertificationDetails'
          type: array
        languages:
          items:
            $ref: '#/components/schemas/LanguageLevel'
          type: array
        office:
          $ref: '#/components/schemas/Office'
        availabilities:
          items:
            $ref: '#/components/schemas/AvailabilityDetail'
          type: array
        skillGroups:
          items:
            $ref: '#/components/schemas/SkillGroup'
          type: array
      type: object
    PersonSearch:
      example:
        skills:
        - lastAssignment: 2000-01-23
          experienceInMonth:
            min: 0
            max: 100
        - lastAssignment: 2000-01-23
          experienceInMonth:
            min: 0
            max: 100
        officeIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projects:
        - participationInMonth:
            min: 0
            max: 100
          involevedOfficeIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - participationInMonth:
            min: 0
            max: 100
          involevedOfficeIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        industries:
        - amountOfProjects:
            min: 0
            max: 100
          experienceInMonth:
            min: 0
            max: 100
          activeProjects: true
        - amountOfProjects:
            min: 0
            max: 100
          experienceInMonth:
            min: 0
            max: 100
          activeProjects: true
        organizations:
        - amountOfProjects:
            min: 0
            max: 100
        - amountOfProjects:
            min: 0
            max: 100
        personIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        onsiteRatio:
          min: 0
          max: 100
        availability: null
        certifications:
        - startedCertificaiton: true
        - startedCertificaiton: true
        seniority:
        - null
        - null
      properties:
        personIds:
          items:
            format: uuid
            type: string
          type: array
        officeIds:
          items:
            format: uuid
            type: string
          type: array
        availability:
          $ref: '#/components/schemas/AvailabilityFilter'
        onsiteRatio:
          $ref: '#/components/schemas/MinMaxPercent'
        seniority:
          items:
            $ref: '#/components/schemas/Seniority'
          type: array
        skills:
          items:
            $ref: '#/components/schemas/PersonSkillFilter'
          type: array
        projects:
          items:
            $ref: '#/components/schemas/PersonProjectFilter'
          type: array
        organizations:
          items:
            $ref: '#/components/schemas/PersonOrganizationFilter'
          type: array
        industries:
          items:
            $ref: '#/components/schemas/PersonIndustryFilter'
          type: array
        certifications:
          items:
            $ref: '#/components/schemas/PersonCertificationFilter'
          type: array
      type: object
    PersonSkillFilter:
      allOf:
      - $ref: '#/components/schemas/EntityFilter'
      example:
        lastAssignment: 2000-01-23
        experienceInMonth:
          min: 0
          max: 100
      properties:
        experienceInMonth:
          $ref: '#/components/schemas/MinMax'
        lastAssignment:
          description: filters the last time the employee used the skill in a project
          format: date
          type: string
      type: object
    PersonProjectFilter:
      allOf:
      - $ref: '#/components/schemas/EntityFilter'
      example:
        participationInMonth:
          min: 0
          max: 100
        involevedOfficeIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        participationInMonth:
          $ref: '#/components/schemas/MinMax'
        involevedOfficeIds:
          items:
            format: uuid
            type: string
          type: array
      type: object
    PersonOrganizationFilter:
      allOf:
      - $ref: '#/components/schemas/EntityFilter'
      example:
        amountOfProjects:
          min: 0
          max: 100
      properties:
        amountOfProjects:
          $ref: '#/components/schemas/MinMax'
      type: object
    PersonIndustryFilter:
      allOf:
      - $ref: '#/components/schemas/EntityFilter'
      example:
        amountOfProjects:
          min: 0
          max: 100
        experienceInMonth:
          min: 0
          max: 100
        activeProjects: true
      properties:
        activeProjects:
          type: boolean
        amountOfProjects:
          $ref: '#/components/schemas/MinMax'
        experienceInMonth:
          $ref: '#/components/schemas/MinMax'
      type: object
    PersonCertificationFilter:
      allOf:
      - $ref: '#/components/schemas/EntityFilter'
      example:
        startedCertificaiton: true
      properties:
        startedCertificaiton:
          description: Include employees who started the certification
          type: boolean
      type: object
    Project:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Locateable'
      - $ref: '#/components/schemas/Descriptable'
      example:
        external: false
      properties:
        external:
          default: false
          description: true if project was done outside of the organization
          type: boolean
      type: object
    ProjectDetails:
      example:
        persons:
        - education: Bachelor of Computer Scince
          mail: peter.mueller@prodyna.com
          jobTitle: Software Engineer
          employeeId: "1234567"
          onsiteRatio: 20
          seniorityEnum: null
          picture: picture
          inactive: false
          mobilePhone: +49 176 12345678
          experienceSinceYear: 2010
          company: PRODYNA SE
          department: Professional Services
          seniority: Senior
        - education: Bachelor of Computer Scince
          mail: peter.mueller@prodyna.com
          jobTitle: Software Engineer
          employeeId: "1234567"
          onsiteRatio: 20
          seniorityEnum: null
          picture: picture
          inactive: false
          mobilePhone: +49 176 12345678
          experienceSinceYear: 2010
          company: PRODYNA SE
          department: Professional Services
          seniority: Senior
        timeframe:
          enddate: 2000-01-23
          startdate: 2000-01-23
        organization:
          partner: false
          picture: picture
          customer: false
        industries:
        - null
        - null
        skillGroups:
        - skills:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          group:
            invest: false
            kindgiver: false
        - skills:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          group:
            invest: false
            kindgiver: false
        project:
          external: false
      properties:
        project:
          $ref: '#/components/schemas/Project'
        organization:
          $ref: '#/components/schemas/Organization'
        industries:
          items:
            $ref: '#/components/schemas/Industry'
          type: array
        persons:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        skillGroups:
          items:
            $ref: '#/components/schemas/SkillGroup'
          type: array
        timeframe:
          $ref: '#/components/schemas/Timeframed'
      type: object
    ProjectScoreDetail:
      allOf:
      - $ref: '#/components/schemas/ProjectDetails'
      - $ref: '#/components/schemas/ProjectScoreDetail_allOf'
      type: object
    ProjectParticipation:
      allOf:
      - $ref: '#/components/schemas/BasicDomainModel'
      - $ref: '#/components/schemas/ProjectParticipation_allOf'
      type: object
    ProjectParticipationUpdate:
      example:
        skills:
        - skillId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level:
            level: 1
        - skillId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          level:
            level: 1
        timeframe:
          enddate: 2000-01-23
          startdate: 2000-01-23
        personalDescription: personalDescription
        descriptionOverwrite: descriptionOverwrite
      properties:
        timeframe:
          $ref: '#/components/schemas/Timeframed'
        skills:
          items:
            $ref: '#/components/schemas/SkillLevelUpdate'
          type: array
        descriptionOverwrite:
          type: string
        personalDescription:
          type: string
      type: object
    ProjectSearch:
      example:
        skills:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        minStartDate: 2000-01-23
        maxEndDate: 2000-01-23
        projectStatuses:
        - null
        - null
        amountOfInvolvedPersons:
          min: 0
          max: 100
        industries:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organizations:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        participationAmountInMonths:
          min: 0
          max: 100
        involvedOfficeIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        participants:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        projectIds:
          items:
            format: uuid
            type: string
          type: array
        minStartDate:
          format: date
          type: string
        maxEndDate:
          format: date
          type: string
        projectStatuses:
          items:
            $ref: '#/components/schemas/ProjectStatus'
          type: array
        participationAmountInMonths:
          $ref: '#/components/schemas/MinMax'
        involvedOfficeIds:
          items:
            format: uuid
            type: string
          type: array
        amountOfInvolvedPersons:
          $ref: '#/components/schemas/MinMax'
        skills:
          items:
            $ref: '#/components/schemas/EntityFilter'
          type: array
        participants:
          items:
            $ref: '#/components/schemas/EntityFilter'
          type: array
        industries:
          items:
            $ref: '#/components/schemas/EntityFilter'
          type: array
        organizations:
          items:
            $ref: '#/components/schemas/EntityFilter'
          type: array
      type: object
    ProjectStatus:
      enum:
      - PLANNING
      - ACTIVE
      - DONE
      type: string
    Skill:
      allOf:
      - $ref: '#/components/schemas/NamedDomainModel'
      - $ref: '#/components/schemas/Suggestable'
      - $ref: '#/components/schemas/Linkable'
      - $ref: '#/components/schemas/Synonymable'
      - $ref: '#/components/schemas/Descriptable'
      example:
        invest: false
        kindgiver: false
      properties:
        invest:
          default: false
          type: boolean
        kindgiver:
          default: false
          required:
          - id
          - name
          type: boolean
      type: object
    SkillGroup:
      example:
        skills:
        - invest: false
          kindgiver: false
        - invest: false
          kindgiver: false
        group:
          invest: false
          kindgiver: false
      properties:
        group:
          $ref: '#/components/schemas/Skill'
        skills:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
    SkillLevel:
      example:
        level:
          level: 1
        skill:
          invest: false
          kindgiver: false
      properties:
        skill:
          $ref: '#/components/schemas/Skill'
        level:
          $ref: '#/components/schemas/Level'
      type: object
    SkillLevelUpdate:
      example:
        skillId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        level:
          level: 1
      properties:
        skillId:
          format: uuid
          type: string
        level:
          $ref: '#/components/schemas/Level'
    SkillDetails:
      example:
        children:
        - invest: false
          kindgiver: false
        - invest: false
          kindgiver: false
        displayName: displayName
        skill:
          invest: false
          kindgiver: false
        kinds:
        - invest: false
          kindgiver: false
        - invest: false
          kindgiver: false
        parents:
        - invest: false
          kindgiver: false
        - invest: false
          kindgiver: false
      properties:
        skill:
          $ref: '#/components/schemas/Skill'
        children:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        parents:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        kinds:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        displayName:
          description: "The display name of the skill, e.g. \"Communication (Computing)\"\
            \ or \"Communication (Design)\" or \"Protcool (Communication,IT)\""
          type: string
      type: object
    Status:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    Error:
      properties:
        message:
          type: string
      type: object
    Level:
      example:
        level: 1
      properties:
        level:
          maximum: 5
          minimum: 1
          type: integer
      type: object
    Page:
      discriminator:
        propertyName: type
      properties:
        skip:
          minimum: 0
          type: integer
        limit:
          minimum: 1
          type: integer
        count:
          type: integer
      type: object
    PagedAvailabilities:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        availabilities:
        - availability:
            workHours: 38.5
            descriptions:
            - descriptions
            - descriptions
            plannedHours: 22.5
          percent: 8.008281904610115
        - availability:
            workHours: 38.5
            descriptions:
            - descriptions
            - descriptions
            plannedHours: 22.5
          percent: 8.008281904610115
      properties:
        availabilities:
          items:
            $ref: '#/components/schemas/AvailabilityDetail'
          type: array
      type: object
    PagedOrganizations:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        organizations:
        - projects:
          - external: false
          - external: false
          organization:
            partner: false
            picture: picture
            customer: false
          industries:
          - null
          - null
          offices:
          - null
          - null
          certifications:
          - validity: validity
          - validity: validity
        - projects:
          - external: false
          - external: false
          organization:
            partner: false
            picture: picture
            customer: false
          industries:
          - null
          - null
          offices:
          - null
          - null
          certifications:
          - validity: validity
          - validity: validity
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationDetails'
          type: array
      type: object
    PagedLanguages:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        languages:
        - null
        - null
      properties:
        languages:
          items:
            $ref: '#/components/schemas/Language'
          type: array
      type: object
    PagedCertifications:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        certifications:
        - skills:
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          organization:
            partner: false
            picture: picture
            customer: false
          certification:
            validity: validity
        - skills:
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          - level:
              level: 1
            skill:
              invest: false
              kindgiver: false
          organization:
            partner: false
            picture: picture
            customer: false
          certification:
            validity: validity
      properties:
        certifications:
          items:
            $ref: '#/components/schemas/CertificationDetails'
          type: array
      type: object
    PagedCountries:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        countries:
        - picture: picture
        - picture: picture
      properties:
        countries:
          items:
            $ref: '#/components/schemas/Country'
          type: array
      type: object
    PagedSkills:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        skills:
        - children:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          displayName: displayName
          skill:
            invest: false
            kindgiver: false
          kinds:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          parents:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
        - children:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          displayName: displayName
          skill:
            invest: false
            kindgiver: false
          kinds:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
          parents:
          - invest: false
            kindgiver: false
          - invest: false
            kindgiver: false
      properties:
        skills:
          items:
            $ref: '#/components/schemas/SkillDetails'
          type: array
      type: object
    PagedIndustries:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        industries:
        - organizations:
          - partner: false
            picture: picture
            customer: false
          - partner: false
            picture: picture
            customer: false
          industry: null
        - organizations:
          - partner: false
            picture: picture
            customer: false
          - partner: false
            picture: picture
            customer: false
          industry: null
      properties:
        industries:
          items:
            $ref: '#/components/schemas/IndustryDetails'
          type: array
      type: object
    PagedProjects:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        projects:
        - null
        - null
      properties:
        projects:
          items:
            $ref: '#/components/schemas/ProjectScoreDetail'
          type: array
      type: object
    PagedPersons:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        persons:
        - score: 0.8008281904610115
        - score: 0.8008281904610115
      properties:
        persons:
          items:
            $ref: '#/components/schemas/PersonScoreDetail'
          type: array
      type: object
    PersonScoreDetail:
      allOf:
      - $ref: '#/components/schemas/PersonDetails'
      example:
        score: 0.8008281904610115
      properties:
        score:
          type: number
      type: object
    SearchResult:
      allOf:
      - $ref: '#/components/schemas/Page'
      example:
        items:
        - score: 0.7
          item:
            name: This is the name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Certification
        - score: 0.7
          item:
            name: This is the name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: Certification
      properties:
        items:
          items:
            $ref: '#/components/schemas/SearchResultItem'
          type: array
      type: object
    SearchResultItem:
      example:
        score: 0.7
        item:
          name: This is the name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: Certification
      properties:
        score:
          example: 0.7
          type: number
        type:
          example: Certification
          type: string
        item:
          $ref: '#/components/schemas/NamedDomainModel'
      type: object
    EntityFilter:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      required:
      - id
      type: object
    AvailabilityFilter:
      allOf:
      - $ref: '#/components/schemas/Timeframed'
      - $ref: '#/components/schemas/MinMaxPercent'
    MinMaxPercent:
      example:
        min: 0
        max: 100
      properties:
        min:
          example: 0
          maximum: 100
          minimum: 0
          type: integer
        max:
          example: 100
          maximum: 100
          minimum: 0
          type: integer
      type: object
    MinMax:
      example:
        min: 0
        max: 100
      properties:
        min:
          example: 0
          type: integer
        max:
          example: 100
          type: integer
      type: object
    Seniority:
      enum:
      - UNKNOWN
      - ENTRY_LEVEL
      - PROFESSIONAL
      - SENIOR
      - MANAGING
      - PRINCIPAL
      type: string
    ProjectScoreDetail_allOf:
      properties:
        score:
          type: number
      type: object
      example: null
    ProjectParticipation_allOf:
      properties:
        timeframe:
          $ref: '#/components/schemas/Timeframed'
        projectDetails:
          $ref: '#/components/schemas/ProjectDetails'
        descriptionOverwrite:
          example: Responsible Soluation Architect for this project.
          type: string
        personalDescription:
          type: string
        experiences:
          items:
            $ref: '#/components/schemas/Experience'
          readOnly: true
          type: array
      required:
      - experiences
      - id
      - project
      type: object
      example: null
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
