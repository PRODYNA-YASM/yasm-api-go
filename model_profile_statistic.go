/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.68.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ProfileStatistic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileStatistic{}

// ProfileStatistic struct for ProfileStatistic
type ProfileStatistic struct {
	Profile *Profile `json:"profile,omitempty"`
	Office *Office `json:"office,omitempty"`
	Country *Country `json:"country,omitempty"`
	Seniority *Seniority `json:"seniority,omitempty"`
	CountOfPersons *int32 `json:"countOfPersons,omitempty"`
}

// NewProfileStatistic instantiates a new ProfileStatistic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileStatistic() *ProfileStatistic {
	this := ProfileStatistic{}
	return &this
}

// NewProfileStatisticWithDefaults instantiates a new ProfileStatistic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileStatisticWithDefaults() *ProfileStatistic {
	this := ProfileStatistic{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ProfileStatistic) GetProfile() Profile {
	if o == nil || IsNil(o.Profile) {
		var ret Profile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatistic) GetProfileOk() (*Profile, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ProfileStatistic) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given Profile and assigns it to the Profile field.
func (o *ProfileStatistic) SetProfile(v Profile) {
	o.Profile = &v
}

// GetOffice returns the Office field value if set, zero value otherwise.
func (o *ProfileStatistic) GetOffice() Office {
	if o == nil || IsNil(o.Office) {
		var ret Office
		return ret
	}
	return *o.Office
}

// GetOfficeOk returns a tuple with the Office field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatistic) GetOfficeOk() (*Office, bool) {
	if o == nil || IsNil(o.Office) {
		return nil, false
	}
	return o.Office, true
}

// HasOffice returns a boolean if a field has been set.
func (o *ProfileStatistic) HasOffice() bool {
	if o != nil && !IsNil(o.Office) {
		return true
	}

	return false
}

// SetOffice gets a reference to the given Office and assigns it to the Office field.
func (o *ProfileStatistic) SetOffice(v Office) {
	o.Office = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ProfileStatistic) GetCountry() Country {
	if o == nil || IsNil(o.Country) {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatistic) GetCountryOk() (*Country, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ProfileStatistic) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *ProfileStatistic) SetCountry(v Country) {
	o.Country = &v
}

// GetSeniority returns the Seniority field value if set, zero value otherwise.
func (o *ProfileStatistic) GetSeniority() Seniority {
	if o == nil || IsNil(o.Seniority) {
		var ret Seniority
		return ret
	}
	return *o.Seniority
}

// GetSeniorityOk returns a tuple with the Seniority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatistic) GetSeniorityOk() (*Seniority, bool) {
	if o == nil || IsNil(o.Seniority) {
		return nil, false
	}
	return o.Seniority, true
}

// HasSeniority returns a boolean if a field has been set.
func (o *ProfileStatistic) HasSeniority() bool {
	if o != nil && !IsNil(o.Seniority) {
		return true
	}

	return false
}

// SetSeniority gets a reference to the given Seniority and assigns it to the Seniority field.
func (o *ProfileStatistic) SetSeniority(v Seniority) {
	o.Seniority = &v
}

// GetCountOfPersons returns the CountOfPersons field value if set, zero value otherwise.
func (o *ProfileStatistic) GetCountOfPersons() int32 {
	if o == nil || IsNil(o.CountOfPersons) {
		var ret int32
		return ret
	}
	return *o.CountOfPersons
}

// GetCountOfPersonsOk returns a tuple with the CountOfPersons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatistic) GetCountOfPersonsOk() (*int32, bool) {
	if o == nil || IsNil(o.CountOfPersons) {
		return nil, false
	}
	return o.CountOfPersons, true
}

// HasCountOfPersons returns a boolean if a field has been set.
func (o *ProfileStatistic) HasCountOfPersons() bool {
	if o != nil && !IsNil(o.CountOfPersons) {
		return true
	}

	return false
}

// SetCountOfPersons gets a reference to the given int32 and assigns it to the CountOfPersons field.
func (o *ProfileStatistic) SetCountOfPersons(v int32) {
	o.CountOfPersons = &v
}

func (o ProfileStatistic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileStatistic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Office) {
		toSerialize["office"] = o.Office
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Seniority) {
		toSerialize["seniority"] = o.Seniority
	}
	if !IsNil(o.CountOfPersons) {
		toSerialize["countOfPersons"] = o.CountOfPersons
	}
	return toSerialize, nil
}

type NullableProfileStatistic struct {
	value *ProfileStatistic
	isSet bool
}

func (v NullableProfileStatistic) Get() *ProfileStatistic {
	return v.value
}

func (v *NullableProfileStatistic) Set(val *ProfileStatistic) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileStatistic) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileStatistic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileStatistic(val *ProfileStatistic) *NullableProfileStatistic {
	return &NullableProfileStatistic{value: val, isSet: true}
}

func (v NullableProfileStatistic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileStatistic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


