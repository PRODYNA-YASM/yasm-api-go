/*
YASM (Yet Another Skill Management) API

Testing ProjectLayoutAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/prodyna-yasm/yasm-api-go"
)

func Test_client_ProjectLayoutAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProjectLayoutAPIService CreateLayoutOverlay", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var projectLayoutId string

		resp, httpRes, err := apiClient.ProjectLayoutAPI.CreateLayoutOverlay(context.Background(), projectId, projectLayoutId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectLayoutAPIService CreateProjectLayout", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.ProjectLayoutAPI.CreateProjectLayout(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectLayoutAPIService DeleteOverlayFromLayoutInProject", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var projectLayoutId string
		var overlayId string

		resp, httpRes, err := apiClient.ProjectLayoutAPI.DeleteOverlayFromLayoutInProject(context.Background(), projectId, projectLayoutId, overlayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProjectLayoutAPIService RenderOverlayToPng", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var projectLayoutId string

		resp, httpRes, err := apiClient.ProjectLayoutAPI.RenderOverlayToPng(context.Background(), projectId, projectLayoutId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
