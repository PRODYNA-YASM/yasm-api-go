/*
YASM (Yet Another Skill Management) API

Testing IndustryAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/prodyna-yasm/yasm-api-go"
)

func Test_client_IndustryAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IndustryAPIService AttachOrganizationToIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var organizationId string
		var industryId string

		resp, httpRes, err := apiClient.IndustryAPI.AttachOrganizationToIndustry(context.Background(), organizationId, industryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService CreateIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.IndustryAPI.CreateIndustry(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService DeleteIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var industryId string

		resp, httpRes, err := apiClient.IndustryAPI.DeleteIndustry(context.Background(), industryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService DetachOrganizationFromIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var organizationId string
		var industryId string

		resp, httpRes, err := apiClient.IndustryAPI.DetachOrganizationFromIndustry(context.Background(), organizationId, industryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService GetIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var industryId string

		resp, httpRes, err := apiClient.IndustryAPI.GetIndustry(context.Background(), industryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService SearchIndustries", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.IndustryAPI.SearchIndustries(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndustryAPIService UpdateIndustry", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var industryId string

		resp, httpRes, err := apiClient.IndustryAPI.UpdateIndustry(context.Background(), industryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
