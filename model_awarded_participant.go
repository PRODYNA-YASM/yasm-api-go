/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.72.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwardedParticipant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwardedParticipant{}

// AwardedParticipant struct for AwardedParticipant
type AwardedParticipant struct {
	AwardId *string `json:"awardId,omitempty"`
	PersonId *string `json:"personId,omitempty"`
}

// NewAwardedParticipant instantiates a new AwardedParticipant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwardedParticipant() *AwardedParticipant {
	this := AwardedParticipant{}
	return &this
}

// NewAwardedParticipantWithDefaults instantiates a new AwardedParticipant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwardedParticipantWithDefaults() *AwardedParticipant {
	this := AwardedParticipant{}
	return &this
}

// GetAwardId returns the AwardId field value if set, zero value otherwise.
func (o *AwardedParticipant) GetAwardId() string {
	if o == nil || IsNil(o.AwardId) {
		var ret string
		return ret
	}
	return *o.AwardId
}

// GetAwardIdOk returns a tuple with the AwardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwardedParticipant) GetAwardIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwardId) {
		return nil, false
	}
	return o.AwardId, true
}

// HasAwardId returns a boolean if a field has been set.
func (o *AwardedParticipant) HasAwardId() bool {
	if o != nil && !IsNil(o.AwardId) {
		return true
	}

	return false
}

// SetAwardId gets a reference to the given string and assigns it to the AwardId field.
func (o *AwardedParticipant) SetAwardId(v string) {
	o.AwardId = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *AwardedParticipant) GetPersonId() string {
	if o == nil || IsNil(o.PersonId) {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwardedParticipant) GetPersonIdOk() (*string, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *AwardedParticipant) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *AwardedParticipant) SetPersonId(v string) {
	o.PersonId = &v
}

func (o AwardedParticipant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwardedParticipant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwardId) {
		toSerialize["awardId"] = o.AwardId
	}
	if !IsNil(o.PersonId) {
		toSerialize["personId"] = o.PersonId
	}
	return toSerialize, nil
}

type NullableAwardedParticipant struct {
	value *AwardedParticipant
	isSet bool
}

func (v NullableAwardedParticipant) Get() *AwardedParticipant {
	return v.value
}

func (v *NullableAwardedParticipant) Set(val *AwardedParticipant) {
	v.value = val
	v.isSet = true
}

func (v NullableAwardedParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableAwardedParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwardedParticipant(val *AwardedParticipant) *NullableAwardedParticipant {
	return &NullableAwardedParticipant{value: val, isSet: true}
}

func (v NullableAwardedParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwardedParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


