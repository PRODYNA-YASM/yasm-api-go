/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.76.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrganizationLogo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationLogo{}

// OrganizationLogo struct for OrganizationLogo
type OrganizationLogo struct {
	Name *string `json:"name,omitempty"`
	LogoUrl *string `json:"logo_url,omitempty"`
	Domain *string `json:"domain,omitempty"`
}

// NewOrganizationLogo instantiates a new OrganizationLogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationLogo() *OrganizationLogo {
	this := OrganizationLogo{}
	var name string = ""
	this.Name = &name
	var logoUrl string = ""
	this.LogoUrl = &logoUrl
	var domain string = ""
	this.Domain = &domain
	return &this
}

// NewOrganizationLogoWithDefaults instantiates a new OrganizationLogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationLogoWithDefaults() *OrganizationLogo {
	this := OrganizationLogo{}
	var name string = ""
	this.Name = &name
	var logoUrl string = ""
	this.LogoUrl = &logoUrl
	var domain string = ""
	this.Domain = &domain
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationLogo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLogo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationLogo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationLogo) SetName(v string) {
	o.Name = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *OrganizationLogo) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLogo) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *OrganizationLogo) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *OrganizationLogo) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *OrganizationLogo) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLogo) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *OrganizationLogo) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *OrganizationLogo) SetDomain(v string) {
	o.Domain = &v
}

func (o OrganizationLogo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationLogo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	return toSerialize, nil
}

type NullableOrganizationLogo struct {
	value *OrganizationLogo
	isSet bool
}

func (v NullableOrganizationLogo) Get() *OrganizationLogo {
	return v.value
}

func (v *NullableOrganizationLogo) Set(val *OrganizationLogo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationLogo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationLogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationLogo(val *OrganizationLogo) *NullableOrganizationLogo {
	return &NullableOrganizationLogo{value: val, isSet: true}
}

func (v NullableOrganizationLogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationLogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


