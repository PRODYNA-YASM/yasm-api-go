/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.74.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ProjectLayoutSearch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectLayoutSearch{}

// ProjectLayoutSearch struct for ProjectLayoutSearch
type ProjectLayoutSearch struct {
	Search
}

// NewProjectLayoutSearch instantiates a new ProjectLayoutSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectLayoutSearch(skip int32, limit int32) *ProjectLayoutSearch {
	this := ProjectLayoutSearch{}
	this.Skip = skip
	this.Limit = limit
	return &this
}

// NewProjectLayoutSearchWithDefaults instantiates a new ProjectLayoutSearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectLayoutSearchWithDefaults() *ProjectLayoutSearch {
	this := ProjectLayoutSearch{}
	return &this
}

func (o ProjectLayoutSearch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectLayoutSearch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedSearch, errSearch := json.Marshal(o.Search)
	if errSearch != nil {
		return map[string]interface{}{}, errSearch
	}
	errSearch = json.Unmarshal([]byte(serializedSearch), &toSerialize)
	if errSearch != nil {
		return map[string]interface{}{}, errSearch
	}
	return toSerialize, nil
}

type NullableProjectLayoutSearch struct {
	value *ProjectLayoutSearch
	isSet bool
}

func (v NullableProjectLayoutSearch) Get() *ProjectLayoutSearch {
	return v.value
}

func (v *NullableProjectLayoutSearch) Set(val *ProjectLayoutSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectLayoutSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectLayoutSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectLayoutSearch(val *ProjectLayoutSearch) *NullableProjectLayoutSearch {
	return &NullableProjectLayoutSearch{value: val, isSet: true}
}

func (v NullableProjectLayoutSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectLayoutSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


