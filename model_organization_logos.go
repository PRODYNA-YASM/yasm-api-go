/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.76.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrganizationLogos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationLogos{}

// OrganizationLogos struct for OrganizationLogos
type OrganizationLogos struct {
	Logos []OrganizationLogo `json:"logos,omitempty"`
}

// NewOrganizationLogos instantiates a new OrganizationLogos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationLogos() *OrganizationLogos {
	this := OrganizationLogos{}
	return &this
}

// NewOrganizationLogosWithDefaults instantiates a new OrganizationLogos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationLogosWithDefaults() *OrganizationLogos {
	this := OrganizationLogos{}
	return &this
}

// GetLogos returns the Logos field value if set, zero value otherwise.
func (o *OrganizationLogos) GetLogos() []OrganizationLogo {
	if o == nil || IsNil(o.Logos) {
		var ret []OrganizationLogo
		return ret
	}
	return o.Logos
}

// GetLogosOk returns a tuple with the Logos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLogos) GetLogosOk() ([]OrganizationLogo, bool) {
	if o == nil || IsNil(o.Logos) {
		return nil, false
	}
	return o.Logos, true
}

// HasLogos returns a boolean if a field has been set.
func (o *OrganizationLogos) HasLogos() bool {
	if o != nil && !IsNil(o.Logos) {
		return true
	}

	return false
}

// SetLogos gets a reference to the given []OrganizationLogo and assigns it to the Logos field.
func (o *OrganizationLogos) SetLogos(v []OrganizationLogo) {
	o.Logos = v
}

func (o OrganizationLogos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationLogos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Logos) {
		toSerialize["logos"] = o.Logos
	}
	return toSerialize, nil
}

type NullableOrganizationLogos struct {
	value *OrganizationLogos
	isSet bool
}

func (v NullableOrganizationLogos) Get() *OrganizationLogos {
	return v.value
}

func (v *NullableOrganizationLogos) Set(val *OrganizationLogos) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationLogos) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationLogos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationLogos(val *OrganizationLogos) *NullableOrganizationLogos {
	return &NullableOrganizationLogos{value: val, isSet: true}
}

func (v NullableOrganizationLogos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationLogos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


