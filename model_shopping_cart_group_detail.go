/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.72.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ShoppingCartGroupDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShoppingCartGroupDetail{}

// ShoppingCartGroupDetail struct for ShoppingCartGroupDetail
type ShoppingCartGroupDetail struct {
	ShoppingCartGroup *ShoppingCartGroup `json:"shoppingCartGroup,omitempty"`
	Audit *Audit `json:"audit,omitempty"`
	Persons []Person `json:"persons,omitempty"`
}

// NewShoppingCartGroupDetail instantiates a new ShoppingCartGroupDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShoppingCartGroupDetail() *ShoppingCartGroupDetail {
	this := ShoppingCartGroupDetail{}
	return &this
}

// NewShoppingCartGroupDetailWithDefaults instantiates a new ShoppingCartGroupDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShoppingCartGroupDetailWithDefaults() *ShoppingCartGroupDetail {
	this := ShoppingCartGroupDetail{}
	return &this
}

// GetShoppingCartGroup returns the ShoppingCartGroup field value if set, zero value otherwise.
func (o *ShoppingCartGroupDetail) GetShoppingCartGroup() ShoppingCartGroup {
	if o == nil || IsNil(o.ShoppingCartGroup) {
		var ret ShoppingCartGroup
		return ret
	}
	return *o.ShoppingCartGroup
}

// GetShoppingCartGroupOk returns a tuple with the ShoppingCartGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShoppingCartGroupDetail) GetShoppingCartGroupOk() (*ShoppingCartGroup, bool) {
	if o == nil || IsNil(o.ShoppingCartGroup) {
		return nil, false
	}
	return o.ShoppingCartGroup, true
}

// HasShoppingCartGroup returns a boolean if a field has been set.
func (o *ShoppingCartGroupDetail) HasShoppingCartGroup() bool {
	if o != nil && !IsNil(o.ShoppingCartGroup) {
		return true
	}

	return false
}

// SetShoppingCartGroup gets a reference to the given ShoppingCartGroup and assigns it to the ShoppingCartGroup field.
func (o *ShoppingCartGroupDetail) SetShoppingCartGroup(v ShoppingCartGroup) {
	o.ShoppingCartGroup = &v
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *ShoppingCartGroupDetail) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShoppingCartGroupDetail) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *ShoppingCartGroupDetail) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *ShoppingCartGroupDetail) SetAudit(v Audit) {
	o.Audit = &v
}

// GetPersons returns the Persons field value if set, zero value otherwise.
func (o *ShoppingCartGroupDetail) GetPersons() []Person {
	if o == nil || IsNil(o.Persons) {
		var ret []Person
		return ret
	}
	return o.Persons
}

// GetPersonsOk returns a tuple with the Persons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShoppingCartGroupDetail) GetPersonsOk() ([]Person, bool) {
	if o == nil || IsNil(o.Persons) {
		return nil, false
	}
	return o.Persons, true
}

// HasPersons returns a boolean if a field has been set.
func (o *ShoppingCartGroupDetail) HasPersons() bool {
	if o != nil && !IsNil(o.Persons) {
		return true
	}

	return false
}

// SetPersons gets a reference to the given []Person and assigns it to the Persons field.
func (o *ShoppingCartGroupDetail) SetPersons(v []Person) {
	o.Persons = v
}

func (o ShoppingCartGroupDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShoppingCartGroupDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShoppingCartGroup) {
		toSerialize["shoppingCartGroup"] = o.ShoppingCartGroup
	}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.Persons) {
		toSerialize["persons"] = o.Persons
	}
	return toSerialize, nil
}

type NullableShoppingCartGroupDetail struct {
	value *ShoppingCartGroupDetail
	isSet bool
}

func (v NullableShoppingCartGroupDetail) Get() *ShoppingCartGroupDetail {
	return v.value
}

func (v *NullableShoppingCartGroupDetail) Set(val *ShoppingCartGroupDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableShoppingCartGroupDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableShoppingCartGroupDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShoppingCartGroupDetail(val *ShoppingCartGroupDetail) *NullableShoppingCartGroupDetail {
	return &NullableShoppingCartGroupDetail{value: val, isSet: true}
}

func (v NullableShoppingCartGroupDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShoppingCartGroupDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


