/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.72.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the LayoutFileDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LayoutFileDetails{}

// LayoutFileDetails struct for LayoutFileDetails
type LayoutFileDetails struct {
	BasicDomainModel
	Audit *Audit `json:"audit,omitempty"`
	LayoutId *string `json:"layoutId,omitempty"`
}

// NewLayoutFileDetails instantiates a new LayoutFileDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayoutFileDetails(id string) *LayoutFileDetails {
	this := LayoutFileDetails{}
	this.Id = id
	return &this
}

// NewLayoutFileDetailsWithDefaults instantiates a new LayoutFileDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayoutFileDetailsWithDefaults() *LayoutFileDetails {
	this := LayoutFileDetails{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *LayoutFileDetails) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutFileDetails) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *LayoutFileDetails) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *LayoutFileDetails) SetAudit(v Audit) {
	o.Audit = &v
}

// GetLayoutId returns the LayoutId field value if set, zero value otherwise.
func (o *LayoutFileDetails) GetLayoutId() string {
	if o == nil || IsNil(o.LayoutId) {
		var ret string
		return ret
	}
	return *o.LayoutId
}

// GetLayoutIdOk returns a tuple with the LayoutId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutFileDetails) GetLayoutIdOk() (*string, bool) {
	if o == nil || IsNil(o.LayoutId) {
		return nil, false
	}
	return o.LayoutId, true
}

// HasLayoutId returns a boolean if a field has been set.
func (o *LayoutFileDetails) HasLayoutId() bool {
	if o != nil && !IsNil(o.LayoutId) {
		return true
	}

	return false
}

// SetLayoutId gets a reference to the given string and assigns it to the LayoutId field.
func (o *LayoutFileDetails) SetLayoutId(v string) {
	o.LayoutId = &v
}

func (o LayoutFileDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LayoutFileDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBasicDomainModel, errBasicDomainModel := json.Marshal(o.BasicDomainModel)
	if errBasicDomainModel != nil {
		return map[string]interface{}{}, errBasicDomainModel
	}
	errBasicDomainModel = json.Unmarshal([]byte(serializedBasicDomainModel), &toSerialize)
	if errBasicDomainModel != nil {
		return map[string]interface{}{}, errBasicDomainModel
	}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.LayoutId) {
		toSerialize["layoutId"] = o.LayoutId
	}
	return toSerialize, nil
}

type NullableLayoutFileDetails struct {
	value *LayoutFileDetails
	isSet bool
}

func (v NullableLayoutFileDetails) Get() *LayoutFileDetails {
	return v.value
}

func (v *NullableLayoutFileDetails) Set(val *LayoutFileDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLayoutFileDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLayoutFileDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayoutFileDetails(val *LayoutFileDetails) *NullableLayoutFileDetails {
	return &NullableLayoutFileDetails{value: val, isSet: true}
}

func (v NullableLayoutFileDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayoutFileDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


