/*
YASM (Yet Another Skill Management) API

This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API.

API version: 1.14.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PersonOrganizationFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonOrganizationFilter{}

// PersonOrganizationFilter struct for PersonOrganizationFilter
type PersonOrganizationFilter struct {
	Id string `json:"id"`
	ObjectType *string `json:"objectType,omitempty"`
	AmountOfProjects *MinMax `json:"amountOfProjects,omitempty"`
}

// NewPersonOrganizationFilter instantiates a new PersonOrganizationFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonOrganizationFilter(id string) *PersonOrganizationFilter {
	this := PersonOrganizationFilter{}
	this.Id = id
	return &this
}

// NewPersonOrganizationFilterWithDefaults instantiates a new PersonOrganizationFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonOrganizationFilterWithDefaults() *PersonOrganizationFilter {
	this := PersonOrganizationFilter{}
	return &this
}

// GetId returns the Id field value
func (o *PersonOrganizationFilter) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PersonOrganizationFilter) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PersonOrganizationFilter) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *PersonOrganizationFilter) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonOrganizationFilter) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *PersonOrganizationFilter) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *PersonOrganizationFilter) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetAmountOfProjects returns the AmountOfProjects field value if set, zero value otherwise.
func (o *PersonOrganizationFilter) GetAmountOfProjects() MinMax {
	if o == nil || IsNil(o.AmountOfProjects) {
		var ret MinMax
		return ret
	}
	return *o.AmountOfProjects
}

// GetAmountOfProjectsOk returns a tuple with the AmountOfProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonOrganizationFilter) GetAmountOfProjectsOk() (*MinMax, bool) {
	if o == nil || IsNil(o.AmountOfProjects) {
		return nil, false
	}
	return o.AmountOfProjects, true
}

// HasAmountOfProjects returns a boolean if a field has been set.
func (o *PersonOrganizationFilter) HasAmountOfProjects() bool {
	if o != nil && !IsNil(o.AmountOfProjects) {
		return true
	}

	return false
}

// SetAmountOfProjects gets a reference to the given MinMax and assigns it to the AmountOfProjects field.
func (o *PersonOrganizationFilter) SetAmountOfProjects(v MinMax) {
	o.AmountOfProjects = &v
}

func (o PersonOrganizationFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonOrganizationFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.AmountOfProjects) {
		toSerialize["amountOfProjects"] = o.AmountOfProjects
	}
	return toSerialize, nil
}

type NullablePersonOrganizationFilter struct {
	value *PersonOrganizationFilter
	isSet bool
}

func (v NullablePersonOrganizationFilter) Get() *PersonOrganizationFilter {
	return v.value
}

func (v *NullablePersonOrganizationFilter) Set(val *PersonOrganizationFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonOrganizationFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonOrganizationFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonOrganizationFilter(val *PersonOrganizationFilter) *NullablePersonOrganizationFilter {
	return &NullablePersonOrganizationFilter{value: val, isSet: true}
}

func (v NullablePersonOrganizationFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonOrganizationFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


